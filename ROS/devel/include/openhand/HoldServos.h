// Generated by gencpp from file openhand/HoldServos.msg
// DO NOT EDIT!


#ifndef OPENHAND_MESSAGE_HOLDSERVOS_H
#define OPENHAND_MESSAGE_HOLDSERVOS_H

#include <ros/service_traits.h>


#include <openhand/HoldServosRequest.h>
#include <openhand/HoldServosResponse.h>


namespace openhand
{

struct HoldServos
{

typedef HoldServosRequest Request;
typedef HoldServosResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct HoldServos
} // namespace openhand


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::openhand::HoldServos > {
  static const char* value()
  {
    return "9012ec588f6488638f420162efc2fcb2";
  }

  static const char* value(const ::openhand::HoldServos&) { return value(); }
};

template<>
struct DataType< ::openhand::HoldServos > {
  static const char* value()
  {
    return "openhand/HoldServos";
  }

  static const char* value(const ::openhand::HoldServos&) { return value(); }
};


// service_traits::MD5Sum< ::openhand::HoldServosRequest> should match 
// service_traits::MD5Sum< ::openhand::HoldServos > 
template<>
struct MD5Sum< ::openhand::HoldServosRequest>
{
  static const char* value()
  {
    return MD5Sum< ::openhand::HoldServos >::value();
  }
  static const char* value(const ::openhand::HoldServosRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::openhand::HoldServosRequest> should match 
// service_traits::DataType< ::openhand::HoldServos > 
template<>
struct DataType< ::openhand::HoldServosRequest>
{
  static const char* value()
  {
    return DataType< ::openhand::HoldServos >::value();
  }
  static const char* value(const ::openhand::HoldServosRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::openhand::HoldServosResponse> should match 
// service_traits::MD5Sum< ::openhand::HoldServos > 
template<>
struct MD5Sum< ::openhand::HoldServosResponse>
{
  static const char* value()
  {
    return MD5Sum< ::openhand::HoldServos >::value();
  }
  static const char* value(const ::openhand::HoldServosResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::openhand::HoldServosResponse> should match 
// service_traits::DataType< ::openhand::HoldServos > 
template<>
struct DataType< ::openhand::HoldServosResponse>
{
  static const char* value()
  {
    return DataType< ::openhand::HoldServos >::value();
  }
  static const char* value(const ::openhand::HoldServosResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // OPENHAND_MESSAGE_HOLDSERVOS_H
